[gd_scene load_steps=5 format=3 uid="uid://bmb7uqsa88f3s"]

[ext_resource type="Texture2D" uid="uid://brw73seiks7s8" path="res://Assets/Sprites/Projectiles/quarrel.png" id="1_olvme"]

[sub_resource type="GDScript" id="GDScript_tw73y"]
script/source = "extends RigidBody2D

@export var weapon_id: WeaponStats.Weapon
var player_id: int
var damage: int
var force: int

const speed = 500


@export var replicated_position : Vector2
@export var replicated_rotation : float
@export var replicated_linear_velocity : Vector2
@export var replicated_angular_velocity : float

func _integrate_forces(_state):
	if multiplayer.is_server():
		replicated_position = position
		replicated_rotation = rotation
		replicated_linear_velocity = linear_velocity
		replicated_angular_velocity = angular_velocity
	else:
		position = replicated_position
		rotation = replicated_rotation
		linear_velocity = replicated_linear_velocity
		angular_velocity = replicated_angular_velocity

func _ready():
	if multiplayer.is_server():
		damage = WeaponStats.get_damage(weapon_id)
		force = WeaponStats.get_damage(weapon_id)
		var direction = Vector2(speed, 0).rotated(rotation)
		look_at(global_position + direction.normalized())
		apply_impulse(direction)
	if player_id == multiplayer.get_unique_id():
		Audio.play_sfx(\"Weapons/orb_cast\")
	else:
		Audio.play_sfx(\"Weapons/orb_cast\", false, Globals.AUDIO_NOT_OWNED_VOLUME_FACTOR)


func _physics_process(delta):
	if multiplayer.is_server():
		look_at(global_position + linear_velocity.normalized())

func _on_hit(body):
	if multiplayer.is_server():
		if body.is_in_group(\"Player\"):
			if body.player_id == player_id:
				return
			var enemy_health = body.find_child(\"Health\")
			enemy_health.health -= damage
			body.velocity += Vector2(force, 0).rotated(rotation)
		queue_free()
"

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_pslhq"]
properties/0/path = NodePath(".:replicated_position")
properties/0/spawn = true
properties/0/replication_mode = 1
properties/1/path = NodePath(".:replicated_rotation")
properties/1/spawn = true
properties/1/replication_mode = 1
properties/2/path = NodePath(".:replicated_linear_velocity")
properties/2/spawn = true
properties/2/replication_mode = 1
properties/3/path = NodePath(".:replicated_angular_velocity")
properties/3/spawn = true
properties/3/replication_mode = 1

[sub_resource type="CircleShape2D" id="CircleShape2D_eqn2e"]
radius = 3.0

[node name="Orb" type="RigidBody2D"]
gravity_scale = 0.0
continuous_cd = 1
max_contacts_reported = 1
contact_monitor = true
script = SubResource("GDScript_tw73y")
weapon_id = 1

[node name="Sprite2D" type="Sprite2D" parent="."]
texture_filter = 1
texture = ExtResource("1_olvme")

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource("SceneReplicationConfig_pslhq")

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2(6.5, -0.5)
shape = SubResource("CircleShape2D_eqn2e")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(6.5, -0.5)
shape = SubResource("CircleShape2D_eqn2e")
disabled = true

[connection signal="body_entered" from="Area2D" to="." method="_on_hit"]
